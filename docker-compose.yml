services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: stwiki
      POSTGRES_USER: stwiki
      POSTGRES_PASSWORD: stwiki
    ports: ["5434:5432"]
    volumes: ["pg_data:/var/lib/postgresql/data"]
    networks:
      - stwiki-network

  dex:
    image: ghcr.io/dexidp/dex:v2.37.0
    command: ["dex", "serve", "/etc/dex/config.yaml", "--web-http-addr", "0.0.0.0:5556"]
    volumes: 
      - "./docker/dex/config.yaml:/etc/dex/config.yaml:ro"
    ports: ["5556:5556"]
    networks:
      - stwiki-network

  yws:
    image: y-websocket:latest
    build: 
      context: ./docker/y-websocket
      dockerfile: Dockerfile
    ports: ["1234:1234"]
    networks:
      - stwiki-network
    environment:
      PORT: 1234

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_DEFAULT_BUCKETS: stwiki-media
    ports: 
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - stwiki-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  app:
    build:
      context: ./src/STWiki
      dockerfile: Dockerfile
      target: development
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://+:5031
      ConnectionStrings__Default: "Host=localhost:5434;Database=stwiki;Username=stwiki;Password=stwiki"
      Auth__Authority: "http://localhost:5556/dex"
    network_mode: host
    volumes:
      # Mount source for development
      - ./src/STWiki:/src:cached
      # NuGet package cache
      - nuget_cache:/root/.nuget/packages
    depends_on:
      - db
      - dex
      - yws
      - minio

volumes:
  pg_data:
  nuget_cache:
  minio_data:

networks:
  stwiki-network:
    driver: bridge