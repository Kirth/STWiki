@using STWiki.Services
@inject BreadcrumbService BreadcrumbService

@if (Items?.Any() == true)
{
    <nav aria-label="breadcrumb" class="@CssClass">
        <div class="d-flex justify-content-between align-items-center">
            <ol class="breadcrumb mb-0 @BreadcrumbClass">
                @foreach (var item in Items)
                {
                    @if (item.IsActive)
                    {
                        <li class="breadcrumb-item active" aria-current="page" title="@item.Description">
                            @if (!string.IsNullOrEmpty(item.Icon))
                            {
                                <i class="@item.Icon me-1"></i>
                            }
                            @item.Text
                            @if (ShowLevel && item.Level > 0)
                            {
                                <span class="badge bg-secondary ms-1">L@item.Level</span>
                            }
                        </li>
                    }
                    else
                    {
                        <li class="breadcrumb-item" title="@item.Description">
                            <a href="/@item.Slug" class="text-decoration-none">
                                @if (!string.IsNullOrEmpty(item.Icon))
                                {
                                    <i class="@item.Icon me-1"></i>
                                }
                                @item.Text
                            </a>
                            @if (ShowLevel && item.Level > 0)
                            {
                                <span class="badge bg-secondary ms-1">L@item.Level</span>
                            }
                        </li>
                    }
                }
            </ol>
            
            @if (ShowActions && Actions != null)
            {
                <div class="breadcrumb-actions">
                    @Actions
                </div>
            }
        </div>
        
        @if (ShowSiblings && Siblings?.Any() == true)
        {
            <div class="breadcrumb-siblings mt-2">
                <small class="text-muted me-2">Related:</small>
                @foreach (var sibling in Siblings.Take(5))
                {
                    <a href="/@sibling.Slug" class="badge bg-light text-dark text-decoration-none me-1" 
                       title="@sibling.Description">
                        @sibling.Text
                    </a>
                }
                @if (Siblings.Count > 5)
                {
                    <span class="text-muted small">and @(Siblings.Count - 5) more...</span>
                }
            </div>
        }
    </nav>
}

@code {
    [Parameter] public List<BreadcrumbItem>? Items { get; set; }
    [Parameter] public List<BreadcrumbItem>? Siblings { get; set; }
    [Parameter] public string? CurrentSlug { get; set; }
    [Parameter] public BreadcrumbOptions? Options { get; set; }
    [Parameter] public bool ShowLevel { get; set; } = false;
    [Parameter] public bool ShowSiblings { get; set; } = false;
    [Parameter] public bool ShowActions { get; set; } = false;
    [Parameter] public string CssClass { get; set; } = "";
    [Parameter] public string BreadcrumbClass { get; set; } = "";
    [Parameter] public RenderFragment? Actions { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Auto-build breadcrumbs if not provided
        if (Items == null && !string.IsNullOrEmpty(CurrentSlug))
        {
            await BuildBreadcrumbs();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        // Rebuild if slug changed
        if (Items == null && !string.IsNullOrEmpty(CurrentSlug))
        {
            await BuildBreadcrumbs();
        }
    }

    private async Task BuildBreadcrumbs()
    {
        try
        {
            Items = await BreadcrumbService.BuildBreadcrumbsAsync(CurrentSlug!, Options);
            
            if (ShowSiblings && !string.IsNullOrEmpty(CurrentSlug))
            {
                Siblings = await BreadcrumbService.GetSiblingPagesAsync(CurrentSlug);
            }
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error building breadcrumbs: {ex.Message}");
            Items = new List<BreadcrumbItem>();
            Siblings = new List<BreadcrumbItem>();
        }
    }

    public async Task RefreshAsync()
    {
        await BuildBreadcrumbs();
    }
}

