@page "{slug?}"
@model STWiki.Pages.Wiki.EditModel
@{
    ViewData["Title"] = Model.IsNew ? "Create New Page" : $"Edit {Model.Title}";
}

<div class="container-fluid px-4">
    <form method="post" class="mb-4" id="edit-form" asp-route-slug="@Model.OriginalSlug">
        <!-- Clean Header Section -->
        <div class="edit-header rounded-3 shadow-sm border p-4 mb-4">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="mb-3">
                        <label class="form-label fw-semibold text-secondary mb-2">
                            <i class="bi bi-pencil-square me-1"></i>
                            @(Model.IsNew ? "New Wiki Page" : "Edit Page")
                        </label>
                        <input asp-for="Title" class="form-control form-control-lg border-0 bg-light" 
                               placeholder="@(Model.IsNew ? "Enter page title..." : "Page Title")" 
                               style="font-size: 1.25rem; font-weight: 600;" />
                        <span asp-validation-for="Title" class="text-danger small"></span>
                    </div>
                </div>
                
                <div class="col-md-4 text-end">
                    <div class="d-flex gap-2 justify-content-end flex-wrap">
                        <button type="submit" class="btn btn-primary px-4 @(Model.IsLocked ? "disabled" : "")" 
                                @(Model.IsLocked ? "disabled" : "")>
                            <i class="bi bi-save me-1"></i>
                            @(Model.IsNew ? "Create" : "Save")
                        </button>
                        
                        @if (!Model.IsNew)
                        {
                            <button type="button" class="btn btn-outline-@(Model.IsLocked ? "success" : "warning")" 
                                    onclick="submitLockForm('@(Model.IsLocked ? "Unlock this page?" : "Lock this page?")')">
                                <i class="bi bi-@(Model.IsLocked ? "unlock" : "lock") me-1"></i>
                                @(Model.IsLocked ? "Unlock" : "Lock")
                            </button>
                            
                            <a asp-page="/Wiki/View" asp-route-slug="@Model.OriginalSlug" class="btn btn-outline-secondary">
                                <i class="bi bi-x-lg me-1"></i> Cancel
                            </a>
                        }
                        else
                        {
                            <a asp-page="/Wiki/Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-lg me-1"></i> Cancel
                            </a>
                        }
                    </div>
                </div>
            </div>
            
            <!-- Page Metadata -->
            @if (!Model.IsNew)
            {
                <div class="row mt-3 pt-3 border-top">
                    <div class="col-md-8">
                        <div class="d-flex align-items-center text-muted small">
                            <span class="me-4">
                                <i class="bi bi-calendar-plus text-success me-1"></i>
                                Created @Model.CreatedAt?.ToString("MMM dd, yyyy 'at' HH:mm")
                            </span>
                            <span class="me-4">
                                <i class="bi bi-clock-history text-primary me-1"></i>
                                Updated @Model.UpdatedAt?.ToString("MMM dd, yyyy 'at' HH:mm")
                            </span>
                            <span>
                                <i class="bi bi-person text-info me-1"></i>
                                by @if (Model.UpdatedByUser != null)
                                {
                                    @Html.UserLink(Model.UpdatedByUser)
                                }
                                else
                                {
                                    @Html.UserLink(Model.UpdatedBy, Model.UpdatedBy ?? "Unknown")
                                }
                            </span>
                        </div>
                    </div>
                    <div class="col-md-4 text-end">
                        <a asp-page="/Wiki/History" asp-route-slug="@Model.OriginalSlug" class="btn btn-outline-info btn-sm">
                            <i class="bi bi-clock-history me-1"></i>
                            History
                        </a>
                    </div>
                </div>
            }
        </div>

    @* Draft Status Indicator *@
    @if (Model.HasDraft && !Model.IsNew)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert" id="draft-indicator">
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    <i class="bi bi-pencil-square text-primary me-2"></i>
                    <div>
                        <strong>Editing Draft Content</strong>
                        <div class="small text-muted">
                            Auto-saved @if(Model.LastDraftAt.HasValue) { <text>@Model.LastDraftAt.Value.ToString("yyyy-MM-dd HH:mm")</text> }
                            @if(Model.LastCommittedAt.HasValue) { <text> â€¢ Last committed @Model.LastCommittedAt.Value.ToString("yyyy-MM-dd HH:mm")</text> }
                        </div>
                    </div>
                </div>
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="discardDraft()">
                        <i class="bi bi-trash me-1"></i>Discard Draft
                    </button>
                </div>
            </div>
        </div>
    }

    @if (!ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <div asp-validation-summary="All"></div>
        </div>
    }
    
    @if (ViewData["IsPageLocked"] != null)
    {
        <div class="alert alert-warning d-flex align-items-center">
            <i class="bi bi-lock-fill text-warning me-2"></i>
            <div class="flex-grow-1">
                <strong>Page Locked:</strong> @ViewData["LockWarning"]
            </div>
        </div>
    }
    
    @if (TempData["StatusMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["StatusMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

        <!-- Hidden fields to track slug information -->
        @if (!Model.IsNew)
        {
            <input type="hidden" asp-for="OriginalSlug" />
        }
        <input type="hidden" asp-for="ParentSlugPath" />
        <input type="hidden" asp-for="PageSlugSegment" />
        
        <div class="row g-4">
            <!-- Main Content Area -->
            <div class="col-12">
                <!-- Editor Section -->
                <div class="card mb-4">
                    <div class="card-header bg-light border-0 d-flex justify-content-between align-items-center">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-file-text text-primary me-2"></i>
                            Content Editor
                        </h6>
                        <div class="d-flex align-items-center gap-2">
                            <span class="badge bg-primary px-3">@Model.BodyFormat.ToUpperInvariant()</span>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div id="editor-container">
                            <component type="typeof(STWiki.Components.EditorSimple)" 
                                       render-mode="Server"
                                       param-PageId="@(Model.PageId ?? Guid.Empty)"
                                       param-InitialContentRaw="@Model.Body"
                                       param-YjsRoomRaw="@(Model.Slug ?? "new-page")"
                                       param-BodyFormat="@Model.BodyFormat"
                                       param-HasDraft="@Model.HasDraft"
                                       param-LastDraftAt="@Model.LastDraftAt"
                                       param-LastCommittedAt="@Model.LastCommittedAt" />
                        </div>
                        <textarea asp-for="Body" class="form-control d-none" rows="20" id="body-textarea">@Model.Body</textarea>
                        <span asp-validation-for="Body" class="text-danger"></span>
                    </div>
                </div>

                <!-- URL Configuration -->
                <div class="card mb-4">
                    <div class="card-header bg-light border-0">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-link-45deg text-primary me-2"></i>
                            Page Settings
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                @if (Model.IsNew)
                                {
                                    <label asp-for="Slug" class="form-label fw-medium">Page Name</label>
                                    @if (!string.IsNullOrEmpty(Model.ParentSlugPath))
                                    {
                                        <div class="input-group">
                                            <span class="input-group-text bg-light text-muted">@Model.ParentSlugPath/</span>
                                            <input asp-for="Slug" class="form-control" placeholder="auto-generated-from-title" />
                                        </div>
                                    }
                                    else
                                    {
                                        <input asp-for="Slug" class="form-control" placeholder="auto-generated-from-title" />
                                    }
                                    <div class="form-text">
                                        <i class="bi bi-info-circle me-1"></i>
                                        Enter just the page name. Leave blank to auto-generate from title.
                                    </div>
                                    <span asp-validation-for="Slug" class="text-danger small"></span>
                                }
                                else
                                {
                                    <label asp-for="Slug" class="form-label fw-medium">Page Name</label>
                                    @if (!string.IsNullOrEmpty(Model.ParentSlugPath))
                                    {
                                        <div class="input-group">
                                            <span class="input-group-text bg-light text-muted">@Model.ParentSlugPath/</span>
                                            <input asp-for="Slug" class="form-control" />
                                        </div>
                                        <div class="form-text">
                                            <i class="bi bi-arrow-repeat text-success me-1"></i>
                                            Edit just the page name. Full URL: <code>@Model.ParentSlugPath/@Model.Slug</code>
                                        </div>
                                    }
                                    else
                                    {
                                        <input asp-for="Slug" class="form-control" />
                                        <div class="form-text">
                                            <i class="bi bi-arrow-repeat text-success me-1"></i>
                                            This is a top-level page. Changing the name will create an automatic redirect.
                                        </div>
                                    }
                                    <span asp-validation-for="Slug" class="text-danger small"></span>
                                }
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Summary" class="form-label fw-medium">Summary <span class="text-muted">(Optional)</span></label>
                                <input asp-for="Summary" class="form-control" placeholder="Brief description of this page..." />
                                <div class="form-text">
                                    <i class="bi bi-chat-left-text me-1"></i>
                                    Short description for search results and previews
                                </div>
                                <span asp-validation-for="Summary" class="text-danger small"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Format Options -->
                <div class="card">
                    <div class="card-header bg-light border-0">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-code-slash text-primary me-2"></i>
                            Format Options
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex gap-2 align-items-center">
                            <span class="text-muted small">Switch format:</span>
                            <button type="button" class="btn btn-outline-primary btn-sm" id="switch-to-html-btn" 
                                    style="display: @(Model.BodyFormat == "markdown" ? "inline-block" : "none");">
                                <i class="bi bi-code-slash me-1"></i> HTML
                            </button>
                            <button type="button" class="btn btn-outline-primary btn-sm" id="switch-to-markdown-btn"
                                    style="display: @(Model.BodyFormat == "markdown" ? "none" : "inline-block");">
                                <i class="bi bi-markdown me-1"></i> Markdown
                            </button>
                        </div>
                    
                    <!-- Hidden format conversion options -->
                    <div id="format-conversion-options" class="mt-2 p-3 border rounded bg-light" style="display: none;">
                        <h6 class="text-primary mb-2">Format Conversion Options</h6>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="conversionOption" id="convert-content" value="convert" checked>
                            <label class="form-check-label" for="convert-content">
                                <strong>Convert content automatically</strong>
                                <div class="form-text" id="conversion-description">
                                    <!-- Description will be set by JavaScript -->
                                </div>
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="conversionOption" id="keep-as-is" value="keep">
                            <label class="form-check-label" for="keep-as-is">
                                <strong>Keep content as-is (no translation)</strong>
                                <div class="form-text">Content will be switched to new format without any conversion</div>
                            </label>
                        </div>
                        <div class="mt-3">
                            <button type="button" class="btn btn-primary btn-sm" id="confirm-format-switch">
                                <i class="bi bi-check-circle"></i> Confirm Format Switch
                            </button>
                            <button type="button" class="btn btn-secondary btn-sm ms-2" id="cancel-format-switch">
                                <i class="bi bi-x-circle"></i> Cancel
                            </button>
                        </div>
                        <div class="alert alert-warning mt-2 mb-0">
                            <small><i class="bi bi-exclamation-triangle"></i> 
                            <strong>Warning:</strong> Converting between formats may result in some formatting loss. Consider making a backup of your content first.</small>
                        </div>
                    </div>
                    
                    <!-- Hidden select for form submission -->
                    <select asp-for="BodyFormat" class="form-select" style="display: none;">
                        <option value="markdown">Markdown</option>
                        <option value="html">HTML</option>
                    </select>
                    <span asp-validation-for="BodyFormat" class="text-danger"></span>
                </div>
            </div>
        </div>
    </form>
    
    <!-- Separate lock form to avoid nesting -->
    @if (!Model.IsNew)
    {
        <form method="post" asp-page-handler="ToggleLock" asp-route-slug="@Model.OriginalSlug" id="lock-form" style="display: none;">
        </form>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="_framework/blazor.server.js"></script>
    
    <!-- Prism.js Syntax Highlighting - Local Files -->
    <link href="~/lib/prism/prism.min.css" rel="stylesheet" />
    <script src="~/lib/prism/prism.min.js"></script>
    <!-- Essential Languages Only -->
    <script src="~/lib/prism/prism-javascript.min.js"></script>
    <script src="~/lib/prism/prism-python.min.js"></script>
    <script src="~/lib/prism/prism-csharp.min.js"></script>
    <script src="~/lib/prism/prism-css.min.js"></script>
    <script src="~/lib/prism/prism-html.min.js"></script>
    <script src="~/lib/prism/prism-json.min.js"></script>
    <script src="~/lib/prism/prism-sql.min.js"></script>
    <script src="~/lib/prism/prism-bash.min.js"></script>
    
    <!-- New modular editor system -->
    <script type="module" src="~/js/wiki-editor.js"></script>
    <script type="module" src="~/js/wiki-editor-blazor-bridge.js"></script>
    <script src="~/js/media-library.js"></script>
    
    <!-- Page-specific functionality (extracted from inline scripts) -->
    <script src="~/js/blazor-diagnostics.js"></script>
    <script src="~/js/format-switching.js"></script>
    <script src="~/js/fallback-drag-drop.js"></script>
    <script src="~/js/editor-button-handlers.js"></script>
    <script src="~/js/form-sync.js"></script>
    <script src="~/js/dom-traps.js"></script>
    <script src="~/js/draft-management.js"></script>
    <script src="~/js/page-lock.js"></script>
    
    <!-- Initialize draft management with page ID -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof initializeDraftManagement === 'function') {
                initializeDraftManagement('@Model.PageId');
            }
        });
    </script>
        <link href="~/css/edit-page.css" rel="stylesheet" />
}

<!-- Upload Modal for Drag & Drop Integration -->
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">Upload Media Files</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Drag and Drop Zone -->
                <div id="dropzone" class="border-2 border-dashed border-secondary rounded p-5 text-center mb-3">
                    <i class="bi bi-cloud-upload display-4 text-muted mb-3 d-block"></i>
                    <h5>Drag and drop files here</h5>
                    <p class="text-muted">or click to browse files</p>
                    <input type="file" id="fileInput" multiple class="form-control" style="display: none;" accept="image/*,.pdf,.txt,.md,.docx,.pptx">
                    <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('fileInput').click()">
                        Choose Files
                    </button>
                </div>

                <!-- Upload Progress -->
                <div id="uploadProgress" style="display: none;">
                    <div class="progress mb-3">
                        <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                    </div>
                    <div id="uploadStatus" class="text-center"></div>
                </div>

                <!-- File List -->
                <div id="fileList"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="uploadBtn" onclick="mediaLibrary.uploadFiles()" disabled>
                    Upload Files
                </button>
            </div>
        </div>
    </div>
</div>

