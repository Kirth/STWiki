@page "/user/{username}/contributions"
@model STWiki.Pages.User.ContributionsModel
@{
    ViewData["Title"] = $"{Model.DisplayName} - Contributions";
    Layout = "_Layout";
}

<div class="row">
    <div class="col-12">
        <!-- Page Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/user/@Model.Username">@Model.DisplayName</a>
                        </li>
                        <li class="breadcrumb-item active">Contributions</li>
                    </ol>
                </nav>
                <h1 class="h3 mb-1">
                    <i class="bi bi-journal-text me-2"></i>
                    User Contributions
                </h1>
                <p class="text-muted mb-0">All activities by @Model.DisplayName</p>
            </div>
            
            <!-- Filters -->
            <div class="btn-group" role="group" aria-label="Contribution filters">
                <input type="radio" class="btn-check" name="contributionFilter" id="filter-all" autocomplete="off" 
                       @(string.IsNullOrEmpty(Model.Filter) ? "checked" : "")>
                <label class="btn btn-outline-primary btn-sm" for="filter-all">All</label>

                <input type="radio" class="btn-check" name="contributionFilter" id="filter-edits" autocomplete="off"
                       @(Model.Filter == "edits" ? "checked" : "")>
                <label class="btn btn-outline-primary btn-sm" for="filter-edits">Page Edits</label>

                <input type="radio" class="btn-check" name="contributionFilter" id="filter-creates" autocomplete="off"
                       @(Model.Filter == "creates" ? "checked" : "")>
                <label class="btn btn-outline-primary btn-sm" for="filter-creates">New Pages</label>
            </div>
        </div>

        <!-- Summary Statistics -->
        <div class="row mb-4">
            <div class="col-md-2 col-sm-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="text-primary h4 mb-1">
                            <i class="bi bi-activity"></i>
                        </div>
                        <div class="fw-bold">@Model.TotalContributions</div>
                        <div class="text-muted small">Total</div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="text-success h4 mb-1">
                            <i class="bi bi-file-plus"></i>
                        </div>
                        <div class="fw-bold">@Model.PagesCreated</div>
                        <div class="text-muted small">Created</div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="text-info h4 mb-1">
                            <i class="bi bi-pencil"></i>
                        </div>
                        <div class="fw-bold">@Model.PagesEdited</div>
                        <div class="text-muted small">Edited</div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="text-warning h4 mb-1">
                            <i class="bi bi-search"></i>
                        </div>
                        <div class="fw-bold">@Model.SearchesPerformed</div>
                        <div class="text-muted small">Searches</div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="text-secondary h4 mb-1">
                            <i class="bi bi-calendar3"></i>
                        </div>
                        <div class="fw-bold">@Model.DaysActive</div>
                        <div class="text-muted small">Days Active</div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-sm-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="text-muted h4 mb-1">
                            <i class="bi bi-clock-history"></i>
                        </div>
                        <div class="fw-bold">@GetTimeAgo(Model.LastContribution)</div>
                        <div class="text-muted small">Last Active</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Contribution Timeline -->
        <div class="card">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h5 class="mb-0">
                            <i class="bi bi-list-ul me-2"></i>
                            Contribution Timeline
                        </h5>
                    </div>
                    <div class="col-auto">
                        <span class="text-muted small">
                            @if (Model.HasMore)
                            {
                                <span>Showing latest @Model.Activities.Count of @Model.TotalContributions</span>
                            }
                            else
                            {
                                <span>@Model.Activities.Count contributions</span>
                            }
                        </span>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                @if (Model.Activities.Any())
                {
                    <component type="typeof(STWiki.Components.ActivityFeed)" 
                             render-mode="ServerPrerendered"
                             param-Activities="Model.Activities"
                             param-ShowTitle="false"
                             param-ShowUserName="false"
                             param-ShowLoadMore="Model.HasMore"
                             param-EmptyMessage="@("No contributions found")" />

                    @if (Model.HasMore)
                    {
                        <div class="text-center p-3 border-top">
                            <form method="get" class="d-inline">
                                <input type="hidden" name="filter" value="@Model.Filter" />
                                <input type="hidden" name="offset" value="@(Model.Offset + Model.Activities.Count)" />
                                <button type="submit" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-down-circle me-2"></i>
                                    Load More Contributions
                                </button>
                            </form>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5 text-muted">
                        <i class="bi bi-journal display-4 mb-3 d-block"></i>
                        <h5>No contributions found</h5>
                        <p>
                            @if (!string.IsNullOrEmpty(Model.Filter))
                            {
                                <span>No @Model.Filter found for this user.</span>
                                <br />
                                <a href="?filter=" class="btn btn-outline-primary btn-sm mt-2">Show All Contributions</a>
                            }
                            else
                            {
                                <span>This user hasn't made any contributions yet.</span>
                            }
                        </p>
                    </div>
                }
            </div>
        </div>

        @if (Model.TopContributedPages.Any())
        {
            <!-- Top Contributed Pages -->
            <div class="card mt-4">
                <div class="card-header bg-transparent">
                    <h5 class="mb-0">
                        <i class="bi bi-star me-2"></i>
                        Top Contributed Pages
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var contributedPage in Model.TopContributedPages)
                        {
                            <div class="col-lg-6 mb-3">
                                <div class="card h-100">
                                    <div class="card-body">
                                        <h6 class="card-title">
                                            <a href="/wiki/@contributedPage.Slug" class="text-decoration-none">
                                                @contributedPage.Title
                                            </a>
                                        </h6>
                                        <p class="card-text text-muted small">@contributedPage.Summary</p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <small class="text-muted">@contributedPage.ContributionCount contributions</small>
                                            <small class="text-muted">Last: @GetTimeAgo(contributedPage.LastContribution)</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    private string GetTimeAgo(DateTimeOffset? timestamp)
    {
        if (!timestamp.HasValue) return "Never";
        
        var timeSpan = DateTimeOffset.UtcNow - timestamp.Value;
        
        if (timeSpan.TotalMinutes < 1) return "just now";
        if (timeSpan.TotalMinutes < 60) return $"{(int)timeSpan.TotalMinutes}m ago";
        if (timeSpan.TotalHours < 24) return $"{(int)timeSpan.TotalHours}h ago";
        if (timeSpan.TotalDays < 30) return $"{(int)timeSpan.TotalDays}d ago";
        
        return timestamp.Value.ToString("MMM d, yyyy");
    }
}

@section Scripts {
    <script>
        // Filter handling
        document.addEventListener('DOMContentLoaded', function() {
            const filterButtons = document.querySelectorAll('input[name="contributionFilter"]');
            
            filterButtons.forEach(button => {
                button.addEventListener('change', function() {
                    const filter = this.id.replace('filter-', '');
                    const filterValue = filter === 'all' ? '' : filter;
                    
                    // Update URL with new filter
                    const url = new URL(window.location);
                    if (filterValue) {
                        url.searchParams.set('filter', filterValue);
                    } else {
                        url.searchParams.delete('filter');
                    }
                    url.searchParams.delete('offset'); // Reset pagination
                    
                    window.location.href = url.toString();
                });
            });
        });
    </script>
}