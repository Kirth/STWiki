@page "/user/{username}"
@model STWiki.Pages.User.ProfileModel
@{
    ViewData["Title"] = $"{Model.DisplayName} - User Profile";
    Layout = "_Layout";
}

<div class="row">
    <div class="col-md-4 col-lg-3 mb-4">
        <!-- User Info Card -->
        <div class="card">
            <div class="card-body text-center">
                <div class="mb-3">
                    <i class="bi bi-person-circle display-1 text-muted"></i>
                </div>
                <h5 class="card-title mb-1">@Model.DisplayName</h5>
                <p class="text-muted small mb-3">@@(@Model.Username)</p>
                
                <div class="row text-center mb-3">
                    <div class="col-6">
                        <div class="fw-bold">@Model.TotalContributions</div>
                        <div class="text-muted small">Contributions</div>
                    </div>
                    <div class="col-6">
                        <div class="fw-bold">@Model.PagesCreated</div>
                        <div class="text-muted small">Pages Created</div>
                    </div>
                </div>
                
                @if (Model.IsCurrentUser)
                {
                    <div class="d-grid gap-2">
                        <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                            <i class="bi bi-pencil me-2"></i>
                            Edit Profile
                        </button>
                    </div>
                }
                else
                {
                    <div class="d-grid gap-2">
                        <a href="/user/@Model.Username/contributions" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-journal-text me-2"></i>
                            View Contributions
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="card mt-3">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-bar-chart me-2"></i>
                    Activity Stats
                </h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12 mb-2">
                        <div class="d-flex justify-content-between">
                            <span class="text-muted">Last Active:</span>
                            <span>@GetTimeAgo(Model.LastActive)</span>
                        </div>
                    </div>
                    <div class="col-12 mb-2">
                        <div class="d-flex justify-content-between">
                            <span class="text-muted">Member Since:</span>
                            <span>@Model.MemberSince?.ToString("MMM yyyy")</span>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="d-flex justify-content-between">
                            <span class="text-muted">Most Active:</span>
                            <span>@Model.MostActiveDay</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-8 col-lg-9">
        <!-- Tab Navigation -->
        <ul class="nav nav-tabs mb-4" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="activity-tab" data-bs-toggle="tab" data-bs-target="#activity" type="button" role="tab">
                    <i class="bi bi-activity me-2"></i>
                    Recent Activity
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="contributions-tab" data-bs-toggle="tab" data-bs-target="#contributions" type="button" role="tab">
                    <i class="bi bi-journal-text me-2"></i>
                    Top Contributions
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="statistics-tab" data-bs-toggle="tab" data-bs-target="#statistics" type="button" role="tab">
                    <i class="bi bi-graph-up me-2"></i>
                    Statistics
                </button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="profileTabsContent">
            <!-- Recent Activity Tab -->
            <div class="tab-pane fade show active" id="activity" role="tabpanel">
                <div class="card">
                    <div class="card-body">
                        <component type="typeof(STWiki.Components.ActivityFeed)" 
                                 render-mode="ServerPrerendered"
                                 param-UserId="@Model.UserId" 
                                 param-MaxItems="20" 
                                 param-ShowTitle="false"
                                 param-EmptyMessage="@("No recent activity found for this user")" />
                    </div>
                </div>
            </div>

            <!-- Top Contributions Tab -->
            <div class="tab-pane fade" id="contributions" role="tabpanel">
                <div class="card">
                    <div class="card-body">
                        @if (Model.TopContributions?.Any() == true)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var contribution in Model.TopContributions)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">
                                                <a href="/wiki/@contribution.PageSlug" class="text-decoration-none">
                                                    @contribution.PageTitle
                                                </a>
                                            </h6>
                                            <p class="mb-1 text-muted small">@contribution.Summary</p>
                                            <small class="text-muted">
                                                Last edited @GetTimeAgo(contribution.LastEdited)
                                            </small>
                                        </div>
                                        <span class="badge bg-primary rounded-pill">@contribution.EditCount edits</span>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4 text-muted">
                                <i class="bi bi-journal display-4 mb-3 d-block"></i>
                                <h5>No contributions yet</h5>
                                <p>This user hasn't made any contributions to the wiki.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Statistics Tab -->
            <div class="tab-pane fade" id="statistics" role="tabpanel">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="card">
                            <div class="card-body">
                                <h6 class="card-title">
                                    <i class="bi bi-calendar3 me-2"></i>
                                    Activity This Week
                                </h6>
                                <div class="row">
                                    @foreach (var day in Model.WeeklyActivity ?? new Dictionary<string, int>())
                                    {
                                        <div class="col-12 mb-2">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <span>@day.Key</span>
                                                <div class="d-flex align-items-center">
                                                    <div class="progress flex-grow-1 me-2" style="width: 60px; height: 8px;">
                                                        <div class="progress-bar" role="progressbar" 
                                                             style="width: @(day.Value > 0 ? Math.Min((day.Value / (double)Model.WeeklyActivity.Values.Max()) * 100, 100) : 0)%">
                                                        </div>
                                                    </div>
                                                    <span class="text-muted small">@day.Value</span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6 mb-3">
                        <div class="card">
                            <div class="card-body">
                                <h6 class="card-title">
                                    <i class="bi bi-pie-chart me-2"></i>
                                    Activity Breakdown
                                </h6>
                                <div class="row">
                                    @foreach (var stat in Model.ActivityBreakdown ?? new Dictionary<string, int>())
                                    {
                                        <div class="col-12 mb-2">
                                            <div class="d-flex justify-content-between">
                                                <span>@FormatActivityType(stat.Key)</span>
                                                <span class="fw-bold">@stat.Value</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.IsCurrentUser)
{
    <!-- Edit Profile Modal -->
    <div class="modal fade" id="editProfileModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form method="post" asp-page-handler="UpdateProfile">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="displayName" class="form-label">Display Name</label>
                            <input type="text" class="form-control" id="displayName" name="DisplayName" value="@Model.DisplayName">
                        </div>
                        <div class="mb-3">
                            <label for="bio" class="form-label">Bio</label>
                            <textarea class="form-control" id="bio" name="Bio" rows="3" placeholder="Tell us about yourself...">@Model.Bio</textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@functions {
    private string GetTimeAgo(DateTimeOffset? timestamp)
    {
        if (!timestamp.HasValue) return "Unknown";
        
        var timeSpan = DateTimeOffset.UtcNow - timestamp.Value;
        
        if (timeSpan.TotalMinutes < 1) return "just now";
        if (timeSpan.TotalMinutes < 60) return $"{(int)timeSpan.TotalMinutes}m ago";
        if (timeSpan.TotalHours < 24) return $"{(int)timeSpan.TotalHours}h ago";
        if (timeSpan.TotalDays < 30) return $"{(int)timeSpan.TotalDays}d ago";
        
        return timestamp.Value.ToString("MMM d, yyyy");
    }
    
    private string FormatActivityType(string activityType)
    {
        return activityType switch
        {
            "page_created" => "Pages Created",
            "page_updated" => "Page Updates",
            "page_viewed" => "Page Views",
            "search_performed" => "Searches",
            _ => activityType.Replace("_", " ")
        };
    }
}

@section Scripts {
    <script>
        // Auto-refresh activity feed every 60 seconds
        setInterval(function() {
            if (!document.hidden && document.querySelector('#activity.active')) {
                // Only refresh if the activity tab is active and page is visible
                location.reload();
            }
        }, 60000);
    </script>
}